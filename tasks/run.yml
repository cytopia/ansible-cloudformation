---

###
### Set a sane name for the rendered file
###
- name: register a sane template name
  set_fact:
    cloudformation_file_name: "{{ cloudformation.template | basename }}-{{ cloudformation.stack_name }}.yml"
  check_mode: False


###
### Render cloudformation jinja2 template into the build directory
###
- name: ensure cloudformation template is rendered
  template:
    src: "{{ cloudformation.template }}"
    dest: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    mode: 0644
    force: True
  changed_when: False
  check_mode: False


###
### Diff rendered cloudformation template (check mode only)
###
- name: diff cloudformation template parameters
  cloudformation_diff:
    ignore_hidden_params: True
    ignore_final_newline: False
    output_format: "{{ cloudformation_diff_output }}"
    output_choice: parameter
    stack_name: "{{ cloudformation.stack_name }}"
    template: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    template_tags: "{{ cloudformation.tags | default(omit) }}"
    template_parameters: "{{ cloudformation.template_parameters | default(omit) }}"
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
  when: not cloudformation_generate_only and cloudformation_run_diff
  check_mode: False

- name: diff cloudformation template file
  cloudformation_diff:
    ignore_hidden_params: True
    ignore_final_newline: False
    output_format: "{{ cloudformation_diff_output }}"
    output_choice: template
    stack_name: "{{ cloudformation.stack_name }}"
    template: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    template_tags: "{{ cloudformation.tags | default(omit) }}"
    template_parameters: "{{ cloudformation.template_parameters | default(omit) }}"
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
  when: not cloudformation_generate_only and cloudformation_run_diff
  check_mode: False


###
### Run rendered cloudformation template
###
- name: ensure cloudformation stack is present
  cloudformation:
    stack_name: "{{ cloudformation.stack_name }}"
    state: present
    template: "{{ cloudformation_build_dir_path }}/{{ cloudformation_file_name }}"
    create_changeset: "{{ cloudformation.create_changeset | default(create_changeset) }}"
    disable_rollback: "{{ cloudformation.disable_rollback | default(disable_rollback) }}"
    changeset_name: "{{ cloudformation.changeset_name | default(changeset_name) }}"
    aws_access_key: "{{ cloudformation.aws_access_key | default(cloudformation_defaults.aws_access_key | default(omit)) }}"
    aws_secret_key: "{{ cloudformation.aws_secret_key | default(cloudformation_defaults.aws_secret_key | default(omit)) }}"
    security_token: "{{ cloudformation.security_token | default(cloudformation_defaults.security_token | default(omit)) }}"
    profile: "{{ cloudformation.profile | default(cloudformation_defaults.profile | default(omit)) }}"
    region: "{{ cloudformation.region | default(cloudformation_defaults.region | default(omit)) }}"
    notification_arns: "{{ cloudformation.notification_arns | default(cloudformation_defaults.notification_arns | default(omit)) }}"
    template_parameters: "{{ cloudformation.template_parameters | default(omit) }}"
    tags: "{{ cloudformation.tags | default(omit) }}"
  when: not cloudformation_generate_only
  register: stack_output

- name: stack output
  debug: msg="{{ stack_output.meta|default(stack_output.output) }}"
  when: not cloudformation_generate_only

- name: get changeset description
  command: aws cloudformation describe-change-set --change-set-name "{{ cloudformation.changeset_name | default(changeset_name) }}" --stack-name "{{ cloudformation.stack_name }}"
  changed_when: False
  register: changeset_state
  failed_when: changeset_state.rc != 0
               and not (('ChangeSetNotFound' in changeset_state.stderr) or ('does not exist' in changeset_state.stderr))
  check_mode: False
  when: not cloudformation_generate_only

- name: changeset description
  debug: msg="{{ changeset_state.stdout|from_json }}"
  check_mode: False
  when: not cloudformation_generate_only
        and not (changeset_state.failed or changeset_state.stdout == "")

- name: execute changeset
  command: aws cloudformation execute-change-set --change-set-name "{{ cloudformation.changeset_name | default(changeset_name) }}" --stack-name "{{ cloudformation.stack_name }}"
  register: chg_output
  when: not cloudformation_generate_only
        and ((cloudformation.execute_changeset is defined and cloudformation.execute_changeset|bool) or execute_changeset)
        and not (changeset_state.failed or changeset_state.stdout == "")

- name: ensure stack state after changeset
  command: aws cloudformation wait stack-update-complete --stack-name "{{ cloudformation.stack_name }}"
  when: chg_output.changed
